<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    
    <display-name>Joda Engine</display-name>
    
    <!-- Site Mesh Template and URL Rewriting -->
    <filter>
        <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
    </filter>
    
    <filter>
        <filter-name>url-rewrite</filter-name>
        <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
    </filter>
    
    <!-- Engine bootstrap -->
    <!-- the boostrap is now done in the application
    <listener>
        <listener-class>de.hpi.oryxengine.bootstrap.EngineServletListener</listener-class>
    </listener>
     -->
    <!-- Engine REST-API -->
    <!--
    <servlet>
        <servlet-name>Engine-REST</servlet-name>
        <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>de.hpi.oryxengine.restt.api</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    -->
    <!--
    <listener>
        <listener-class>
            org.jboss.resteasy.plugins.server.servlet.ResteasyBootstrap</listener-class>
    </listener>
    -->
    <servlet>
        <servlet-name>rest-api</servlet-name>
        <servlet-class>org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher</servlet-class>
    </servlet>
	<!-- disabled automated scanning, as the providers and resources will be registered in the Application class provided above.
    <context-param>
        <param-name>resteasy.scan</param-name>
        <param-value>true</param-value>
    </context-param>
 	-->
 	<!-- register the application. The demo application adds the DemoWebService. If you do not need it, use
 	de.hpi.oryxengine.rest.application.JodaEngineApplication. These are the core service only. -->
 	<context-param>
        <param-name>javax.ws.rs.core.Application</param-name>
        <param-value>de.hpi.oryxengine.rest.application.DemoEngineApplication</param-value>
    </context-param>
    <context-param>
        <param-name>resteasy.servlet.mapping.prefix</param-name>
        <param-value>/api</param-value>
    </context-param>
    
    <!-- Less CSS (SaaS-like CSS processor) -->
    <servlet>
        <servlet-name>less</servlet-name>
        <servlet-class>com.asual.lesscss.LessServlet</servlet-class>
        <init-param>
            <param-name>compress</param-name>
            <param-value>true</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <!-- URL Mappings -->
    <filter-mapping>
        <filter-name>url-rewrite</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    
    <servlet-mapping>
        <servlet-name>less</servlet-name>
        <url-pattern>*.css</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>rest-api</servlet-name>
        <url-pattern>/api/*</url-pattern>
    </servlet-mapping>
    
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>
    
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    
</web-app>